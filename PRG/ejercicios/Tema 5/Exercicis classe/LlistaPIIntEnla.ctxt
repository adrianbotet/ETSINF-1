#BlueJ class context
comment0.params=
comment0.target=LlistaPIIntEnla()
comment0.text=\r\n\ Crea\ una\ llista\ buida.\r\n
comment1.params=
comment1.target=boolean\ esBuida()
comment1.text=\r\n\ Comprova\ si\ la\ llista\ actual\ est\u00C3\u00A0\ o\ no\ buida.\r\n\ @return\ boolean,\ true\ si\ la\ llista\ est\u00C3\u00A0\ buida\ i\ false\ en\ cas\ contrari.\r\n
comment10.params=l1\ l2
comment10.target=LlistaPIIntEnla\ Unio(LlistaPIIntEnla,\ LlistaPIIntEnla)
comment10.text=\r\n\ Precondicio\ llista\ ordenada\ sense\ repetir\ \r\n\ @param\ l1\r\n\ @param\ l2\r\n\ @return\r\n
comment11.params=l1\ l2
comment11.target=LlistaPIIntEnla\ UnioDeConjsOrd(LlistaPIIntEnla,\ LlistaPIIntEnla)
comment12.params=l1\ l2
comment12.target=LlistaPIIntEnla\ UnioDeConjsDes(LlistaPIIntEnla,\ LlistaPIIntEnla)
comment12.text=\r\n\ Sin\ elemenros\ repetidos\ pero\ desOrdenado\ ,\ devolver\ otra\ lista\ que\ sea\ la\ Unio\ de\ Ambas\ \r\n
comment13.params=x
comment13.target=boolean\ buscarInici(int)
comment13.text=\r\n\ Busca\ la\ primera\ ocurr\u00C3\u00A8ncia\ de\ x\ des\ del\ primer\ node\ de\ la\ llista;\ \r\n\ si\ el\ troba,\ mou\ el\ PI\ al\ node\ que\ cont\u00C3\u00A9\ a\ x.\ Si\ no\ apareix,\ el\ PI\ \r\n\ no\ es\ mou.\r\n\ @param\ x\ int\ a\ buscar\r\n\ @return\ boolean\ true\ si\ el\ troba\ i\ false\ en\ cas\ contrari.\r\n
comment14.params=x
comment14.target=boolean\ buscarSeguent(int)
comment14.text=\r\n\ Busca\ la\ primera\ ocurr\u00C3\u00A8ncia\ de\ x\ des\ del\ node\ del\ PI\ (inclusivament)\ \r\n\ de\ la\ llista;\ si\ el\ troba,\ mou\ el\ PI\ al\ node\ que\ cont\u00C3\u00A9\ a\ x.\ Si\ no\ \r\n\ apareix,\ el\ PI\ no\ es\ mou.\r\n\ @param\ x\ int\ a\ buscar\r\n\ @return\ boolean\ true\ si\ el\ troba\ i\ false\ en\ cas\ contrari.\r\n
comment15.params=l
comment15.target=void\ concatenar(LlistaPIIntEnla)
comment16.params=val\ davant
comment16.target=void\ inserirSenseRepetits(int,\ boolean)
comment16.text=\ Insereix\ un\ nou\ element\ sols\ si\ no\ existeix(sense\ duplicats).\r\n\ Be\ al\ comencament\ (davant\ es\ true),\ be\ a\ la\ fi\ (davant\ es\ false)\r\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment2.params=
comment2.target=boolean\ esFi()
comment2.text=\r\n\ Comprova\ si\ el\ punt\ d'inter\u00C3\u00A8s\ est\u00C3\u00A0\ al\ final\ de\ la\ llista\ actual.\r\n\ @return\ boolean,\ true\ si\ el\ PI\ est\u00C3\u00A0\ al\ final\ de\ la\ llista\ i\ false\ \r\n\ en\ cas\ contrari.\r\n
comment3.params=
comment3.target=int\ talla()
comment3.text=\r\n\ Torna\ el\ n\u00C3\u00BAmero\ d'elements\ de\ la\ llista\ actual.\r\n\ @return\ int,\ n\u00C3\u00BAmero\ d'elements\ de\ la\ llista\ actual.\r\n
comment4.params=
comment4.target=void\ inici()
comment4.text=\r\n\ Situa\ el\ punt\ d'inter\u00C3\u00A8s\ en\ la\ primera\ posici\u00C3\u00B3\ de\ la\ llista\ actual.\r\n
comment5.params=
comment5.target=void\ seguent()
comment5.text=\r\n\ Despla\u00C3\u00A7a\ el\ PI\ una\ posici\u00C3\u00B3\ cap\ a\ la\ dreta.\ \r\n\ @throws\ NoSuchElementException\ si\ el\ PI\ es\ troba\ al\ final\ de\ la\ llista.\r\n
comment6.params=
comment6.target=int\ recuperar()
comment6.text=\r\n\ Torna\ l'element\ en\ el\ PI.\ \r\n\ @throws\ NoSuchElementException\ si\ el\ PI\ es\ troba\ al\ final\ de\ la\ llista.\r\n\ @return\ int,\ element\ en\ el\ PI\ de\ la\ llista.\r\n
comment7.params=x
comment7.target=void\ inserir(int)
comment7.text=\r\n\ Insereix\ un\ nou\ node\ amb\ l'element\ x\ en\ la\ posici\u00C3\u00B3\ anterior\ al\ PI.\ \r\n\ Si\ el\ cursor\ est\u00C3\u00A0\ a\ l\u00E2\u20AC\u2122inici,\ el\ nou\ node\ ser\u00C3\u00A0\ el\ primer\ de\ la\ \r\n\ llista.\ En\ qualsevol\ altre\ cas,\ el\ nou\ node\ s\u00E2\u20AC\u2122insereix\ entre\ el\ \r\n\ node\ cursor\ i\ el\ seu\ node\ predecessor.\r\n\ @param\ x,\ element\ a\ afegir\ en\ la\ llista.\r\n
comment8.params=
comment8.target=int\ eliminar()
comment8.text=\r\n\ Torna\ i\ elimina\ de\ la\ llista\ l'element\ en\ el\ PI.\ \r\n\ Si\ el\ cursor\ est\u00C3\u00A0\ a\ l\u00E2\u20AC\u2122inici,\ primer\ s\u00E2\u20AC\u2122actualitza\ al\ seu\ node\ \r\n\ seg\u00C3\u00BCent.\ En\ qualevol\ altre\ cas,\ els\ nodes\ anterior\ i\ posterior\ \r\n\ al\ node\ cursor\ queden\ enlla\u00C3\u00A7ats.\r\n\ @throws\ NoSuchElementException\ si\ el\ PI\ es\ troba\ al\ final\ de\ la\ llista.\r\n\ @return\ int,\ element\ en\ el\ PI\ de\ la\ llista.\r\n
comment9.params=aux\ x
comment9.target=boolean\ buscar(NodeInt,\ int)
comment9.text=\r\n\ M\u00C3\u00A8tode\ privat\ auxiliar\ que\ busca\ la\ primera\ ocurr\u00C3\u00A8ncia\ de\ x\ \r\n\ des\ del\ node\ aux\ en\ endavant;\ si\ el\ troba,\ mou\ el\ PI\ al\ node\ \r\n\ que\ cont\u00C3\u00A9\ a\ x.\ Si\ no\ apareix,\ el\ PI\ no\ es\ mou.\r\n\ @param\ aux\ NodeInt\ a\ partir\ del\ qual\ es\ fa\ la\ cerca\r\n\ @param\ x\ int\ a\ buscar\r\n\ @return\ boolean\ true\ si\ el\ troba\ i\ false\ en\ cas\ contrari.\r\n
numComments=18
